<?xml version="1.0" standalone="yes"?>
<!-- ============================================================ -->
<!-- ICT Test Case Definition File                	      -->
<!-- ============================================================ -->
<!-- TestSuite:		IPv6 -->
<!-- TestGroup:		NeighborDiscovery -->
<!-- TestCase:		IPv6NeighborDiscoveryTest9 -->
<!-- Last modified:	11-19-2010 -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Copyright 2010 ICT Technologies                          -->
<!-- All rights reserved                                          -->
<!-- ============================================================ -->

<TestCaseDefinition
	testSuite=			"IPv6"
	testGroup=			"NeighborDiscovery"
	testCase=			"IPv6NeighborDiscoveryTest9"
	protocol=			"IPv6"
	standard=			"RFC4861"
	standardSections=		"RFC4861 (Section 6.3.4, 7.3.3)"
	status=				"Mandatory"
>

	<StandardExtracts>
	</StandardExtracts>

	<TestDescription>
		<Item text="Verify that a node can properly update its Neighbor Cache upon the receipt of a Router Advertisement."/>
		<Item text=""/>
		<Item detail="yes" text="After extracting information from the fixed part of the Router Advertisement message, the advertisement is scanned for valid options. If the advertisement contains a Source Link-Layer Address option, the link-layer address SHOULD be recorded in the Neighbor Cache entry for the router (creating an entry if necessary) and the IsRouter flag in the Neighbor Cache entry MUST be set to TRUE. If no Source Link-Layer option is included, but a corresponding Neighbor Cache entry exists, its IsRouter flag MUST be set to TRUE. The IsRouter flag is used by Neighbor Unreachability Detection to determine when a router changes to being a host (i.e., no longer capable of forwarding packets). If a Neighbor Cache entry is created for the router, its reachability state MUST be set to STALE as specified in Section 7.3.3. If a cache entry already exists and is updated with a different link-layer address, its reachability state MUST also be set to STALE."/>
	</TestDescription>

	<TestPurpose>
	</TestPurpose>

	<Legend>
	</Legend>

	<Assumptions>
	</Assumptions>

	<NodeNameMap>
		<Node id="T1" name="Tester Port 1"/>
		<Node id="D1" name="DUT Port 1"/>
	</NodeNameMap>


<ExpectedMessageSequence>
	<Message from="T1" to="D1" msg="Router_Advertisement_A" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Heading text="Delay 5 seconds" />
	<Timeout value="3" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 8 seconds" />
	<Message from="T1" to="D1" msg="Router_Advertisement_B" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Message from="T1" to="D1" msg="Neighbor_Advertisement" />
	<Timeout value="8" units="seconds" />
	<Message from="D1" to="T1" msg="ICMPv6 Information Message: Echo Reply Message" />
	<Message from="T1" to="D1" msg="Router_Advertisement_A" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="8" units="seconds" />
	<Message from="D1" to="T1" msg="ICMPv6 Information Message: Echo Reply Message" />
	<Heading text="Delay 45 seconds" />
	<Heading text="Clear T1 buffer" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="8" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 50 seconds" />
</ExpectedMessageSequence>

	<TestPassConditions>
		<Item text="when sending a R_A with SLLAO and Echo Request,T1 should receive N_S from DUT.T1 when sending a R_A without SLLAO, Echo Request and N_A ,T1 should receive Echo Reply. when sending a R_A with SLLAO and Echo Request again,T1 should receive Echo Reply. "/>
	</TestPassConditions>

	<PostTestAction>
	</PostTestAction>

</TestCaseDefinition>