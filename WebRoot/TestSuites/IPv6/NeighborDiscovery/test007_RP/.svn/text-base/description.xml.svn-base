<?xml version="1.0" standalone="yes"?>
<!-- ============================================================ -->
<!-- ICT Test Case Definition File                	      -->
<!-- ============================================================ -->
<!-- TestSuite:		IPv6 -->
<!-- TestGroup:		NeighborDiscovery -->
<!-- TestCase:		IPv6NeighborDiscoveryTest7 -->
<!-- Last modified:	11-19-2010 -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Copyright 2010 ICT Technologies                          -->
<!-- All rights reserved                                          -->
<!-- ============================================================ -->

<TestCaseDefinition
	testSuite=			"IPv6"
	testGroup=			"NeighborDiscovery"
	testCase=			"IPv6NeighborDiscoveryTest7"
	protocol=			"IPv6"
	standard=			"RFC4861"
	standardSections=		"RFC4861 (Section 6.3.4)"
	status=				"Mandatory"
>

	<StandardExtracts>
	</StandardExtracts>

	<TestDescription>
		<Item text="Verify that a node can properly process router lifetime field within a Router Advertisement."/>
		<Item text=""/>
		<Item detail="yes" text="After a node received a R_A message with the Router Lifetime set to non-zero, if there is not the router in DRL (Destination Router List), then the node should create an entry in the list and initialize its invalidation timer value; or After a node received a R_A message with the Router Lifetime set to non-zero, if there has been an entry in DRL for the router, then the node should reset its invalidation timer to the Router Lifetime value; After a node received a R_A message with the Router Lifetime set to zero, if the address is already in DRL, the node should immediately timeout the entry. (an addition to send R_A periodically, a router can send back one after received a R_S. When a router is sending back a R_A massage, a delay will happen and its time is between 0 and MAX_RA_DELAY_TIME. If response multiple R_S through a R_A, then the startpos of delay based on the first N_S. The rate-limited should be low MIN_DELAY_BETWEEN_RAS when a R_A sent to all-nodes multicast address.)"/>
	</TestDescription>

	<TestPurpose>
	</TestPurpose>

	<Legend>
	</Legend>

	<Assumptions>
	</Assumptions>

	<NodeNameMap>
		<Node id="T1" name="Tester Port 1"/>
		<Node id="D1" name="DUT Port 1"/>
	</NodeNameMap>


<ExpectedMessageSequence>
	<Message from="T1" to="D1" msg="Router_Advertisement_1" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Message from="T1" to="D1" msg="Neighbor_Advertisement" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="ICMPv6 Information Message: Echo Reply Message" />
	<Heading text="Delay 5 seconds" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Message from="T1" to="D1" msg="Router_Advertisement_1" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="ICMPv6 Information Message: Echo Reply Message" />
	<Message from="T1" to="D1" msg="Router_Advertisement_0" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 20 seconds" />
</ExpectedMessageSequence>

	<TestPassConditions>
		<Item text="T1 should receive Neighbor Solicitation."/>
	</TestPassConditions>

	<PostTestAction>
	</PostTestAction>

</TestCaseDefinition>