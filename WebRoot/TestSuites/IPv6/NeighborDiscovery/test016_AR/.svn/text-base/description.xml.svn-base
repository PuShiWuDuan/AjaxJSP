<?xml version="1.0" standalone="yes"?>
<!-- ============================================================ -->
<!-- ICT Test Case Definition File                	      -->
<!-- ============================================================ -->
<!-- TestSuite:		IPv6 -->
<!-- TestGroup:		NeighborDiscovery -->
<!-- TestCase:		IPv6NeighborDiscoveryTest16 -->
<!-- Last modified:	11-15-2010 -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Copyright 2010 ICT Technologies                          -->
<!-- All rights reserved                                          -->
<!-- ============================================================ -->

<TestCaseDefinition
	testSuite=			"IPv6"
	testGroup=			"NeighborDiscovery"
	testCase=			"IPv6NeighborDiscoveryTest16"
	protocol=			"IPv6"
	standard=			"RFC4861"
	standardSections=		"RFC4861 (Section 7.2.2)"
	status=				"Mandatory"
>

	<StandardExtracts>
	</StandardExtracts>

	<TestDescription>
		<Item text="Verify that a node properly originates Neighbor Solicitations when it tries to resolve the address of a neighbor."/>
		<Item text=""/>
		<Item detail="yes" text="When a node has a unicast packet to send to a neighbor, but does not know the neighbor&apos;s link-layer address, it performs address resolution. For multicast-capable interfaces this entails creating a Neighbor Cache entry in the INCOMPLETE state and transmitting a Neighbor Solicitation message targeted at the neighbor. The solicitation is sent to the solicited-node multicast address corresponding to the target address. If the source address of the packet prompting the solicitation is the same as one of the addresses assigned to the outgoing interface, that address SHOULD be placed in the IP Source Address of the outgoing solicitation. Otherwise, any one of the addresses assigned to the interface should be used. Using the prompting packet&apos;s source address when possible insures that the recipient of the Neighbor Solicitation installs in its Neighbor Cache the IP address that is highly likely to be used in subsequent return traffic belonging to the prompting packet&apos;s &quot;connection&quot;. If the solicitation is being sent to a solicited-node multicast address, the sender MUST include its link-layer address (if it has one) as a Source Link-Layer Address option. Including the source link-layer address in a multicast solicitation is required to give the target an address to which it can send the Neighbor Advertisement. On unicast solicitations, an implementation MAY omit the Source Link-Layer Address option. The assumption here is that if the sender has a peer&apos;s link-layer address in its cache, there is a high probability that the peer will also have an entry in its cache for the sender. Consequently, it need not be sent. While awaiting a response, the sender SHOULD retransmit Neighbor Solicitation messages approximately every RetransTimer milliseconds, even in the absence of additional traffic to the neighbor. Retransmissions MUST be rate-limited to at most one solicitation per neighbor every RetransTimer milliseconds."/>
	</TestDescription>

	<TestPurpose>
	</TestPurpose>

	<Legend>
	</Legend>

	<Assumptions>
	</Assumptions>

	<NodeNameMap>
		<Node id="T1" name="Tester Port 1"/>
		<Node id="D1" name="DUT Port 1"/>
	</NodeNameMap>


<ExpectedMessageSequence>
	<Message from="T1" to="D1" msg="Router_Advertisement_1" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="2" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 1 seconds" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 1 seconds" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 5 seconds" />
	<Message from="T1" to="D1" msg="Router_Advertisement_5" />
	<Message from="T1" to="D1" msg="Echo_Request_A" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 4 seconds" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
	<Heading text="Delay 4 seconds" />
	<Timeout value="1" units="seconds" />
	<Message from="D1" to="T1" msg="Neighbor Solicitation Message" />
</ExpectedMessageSequence>

	<TestPassConditions>
		<Item text="Just wait and see if DUT can response the request by three N_S. if false, then verdict that the DUT behaves wrong, otherwise, verdict that the DUT passes this test.  "/>
	</TestPassConditions>

	<PostTestAction>
	</PostTestAction>

</TestCaseDefinition>